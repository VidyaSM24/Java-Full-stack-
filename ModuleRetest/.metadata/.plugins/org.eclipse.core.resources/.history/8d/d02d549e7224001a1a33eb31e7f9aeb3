package com.capgemini.flipcart.dao;

import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import com.capgemini.flipcart.bean.ProductBean;

public class ProductDaoImpl implements ProductDao{
	FileReader reader;
	Properties prop;
	ProductBean bean;
	
	public ProductDaoImpl()
	{
		try {
			reader = new FileReader("db.properties");
			prop = new Properties();
			prop.load(reader);
			Class.forName(prop.getProperty("driverClass"));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public List<ProductBean> productDetails() {
		List<ProductBean> list = new ArrayList<ProductBean>();
		try (Connection conn = DriverManager.getConnection(prop.getProperty("url"), prop.getProperty("user"),
				prop.getProperty("password"));
				Statement stmt = conn.createStatement();
				ResultSet rs= stmt.executeQuery(prop.getProperty("display"))) {
				while(rs.next())
				{
					ProductBean bean=new ProductBean();
					bean.setProductId(rs.getInt(1));
					bean.setProductName(rs.getString(2));
					bean.setProductCost(rs.getDouble(3));
					bean.setProductColor(rs.getString(4));
					bean.setDescription(rs.getString(5));
					bean.setNumOfProducts(rs.getInt(6));
					list.add(bean);
				}
				return list;
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public ProductBean searchProduct(String productName) {
		try(Connection con=DriverManager.getConnection(prop.getProperty("url"), prop.getProperty("user"),
				prop.getProperty("password"));
				PreparedStatement pstmt=con.prepareStatement(prop.getProperty("search")))
		{
			pstmt.setString(1, productName);
			ResultSet rs=pstmt.executeQuery();
			while(rs.next())
			{
				 
			    ProductBean bean=new ProductBean();
			  
			   // bean.setProductId(rs.getInt(1));
				bean.setProductName(rs.getString(1));
//				bean.setProductCost(rs.getDouble(3));
//				bean.setProductColor(rs.getString(4));
//				bean.setDescription(rs.getString(5));
//				bean.setNumOfProducts(rs.getInt(6));
			   
				return bean;
			}
		}
		catch(Exception e )
		{
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public boolean addProduct(ProductBean bean) {
		try (Connection con = DriverManager.getConnection(prop.getProperty("url"), prop.getProperty("user"),
				prop.getProperty("password"));
				PreparedStatement pstmt = con.prepareStatement(prop.getProperty("insert"))) {
			
			pstmt.setInt(1, bean.getProductId());
			pstmt.setString(2, bean.getProductName());
			pstmt.setDouble(3,bean.getProductCost());
			pstmt.setString(4, bean.getProductColor());
			pstmt.setString(5, bean.getDescription());
			pstmt.setInt(6, bean.getNumOfProducts());
			
			int count=pstmt.executeUpdate();
			if(count>0)
				return true;
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		return false;
	}



}
